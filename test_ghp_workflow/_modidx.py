# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/test-ghp-workflow',
                'doc_host': 'https://harishmohanraj.github.io',
                'git_url': 'https://github.com/harishmohanraj/test-ghp-workflow',
                'lib_path': 'test_ghp_workflow'},
  'syms': { 'test_ghp_workflow.core': {'test_ghp_workflow.core.foo': ('core.html#foo', 'test_ghp_workflow/core.py')},
            'test_ghp_workflow.fixture': { 'test_ghp_workflow.fixture.Car': ('fixture.html#car', 'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.__init__': ( 'fixture.html#car.__init__',
                                                                                       'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.__len__': ( 'fixture.html#car.__len__',
                                                                                      'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.drive': ( 'fixture.html#car.drive',
                                                                                    'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.i_am_a_class_method': ( 'fixture.html#car.i_am_a_class_method',
                                                                                                  'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.i_am_a_static_method': ( 'fixture.html#car.i_am_a_static_method',
                                                                                                   'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.patched_method_from_a_different_file': ( 'fixture.html#car.patched_method_from_a_different_file',
                                                                                                                   'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.patched_method_in_same_file': ( 'fixture.html#car.patched_method_in_same_file',
                                                                                                          'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.random_method': ( 'fixture.html#car.random_method',
                                                                                            'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.start': ( 'fixture.html#car.start',
                                                                                    'test_ghp_workflow/fixture.py'),
                                           'test_ghp_workflow.fixture.Car.stop': ('fixture.html#car.stop', 'test_ghp_workflow/fixture.py')},
            'test_ghp_workflow.fixture_two': { 'test_ghp_workflow.fixture_two.Car.patched_method_from_a_different_file': ( 'fixture_two.html#car.patched_method_from_a_different_file',
                                                                                                                           'test_ghp_workflow/fixture_two.py')}}}
